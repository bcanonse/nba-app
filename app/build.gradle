plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def baseUrl = properties.getProperty("base_url")
def apiKey = properties.getProperty("api_key")
def host = properties.getProperty("header_host")

android {
    namespace 'com.bcanon.nbacloneapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.bcanon.nbacloneapp"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        buildTypes.each {
            it.buildConfigField "String", "BASE_URL", baseUrl
            it.buildConfigField "String", "API_KEY", apiKey
            it.buildConfigField "String", "HOST", host
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    dataBinding {
        enabled = true
    }

    viewBinding {
        enabled = true
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    // SplashScreen
    implementation "androidx.core:core-splashscreen:$splash_screen_version"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Navigation Ktx
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Room
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    //Swipe Push Refresh
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_refresh_layout_version"
    // Fragment
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    // Activity
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$view_model"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$view_model"

    // Paging3
    implementation "androidx.paging:paging-runtime-ktx:$paging3_version"
    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_test_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_core_version"
    testImplementation "androidx.arch.core:core-testing:$core_ktx_test_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    //Coroutines Test
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    //MockServer Test
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockk_web_version"
    // Room Testing Version
    androidTestImplementation "androidx.room:room-testing:$room_version"
}